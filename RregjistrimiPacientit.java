/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projekt;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author drens
 */
public final class RregjistrimiPacientit extends javax.swing.JInternalFrame {

    /**
     * Creates new form RregjistrimiPacientit
     */
    public RregjistrimiPacientit() {
        initComponents();
        getConnection();
        Show_Pacient_In_Table();
    }

    Connection con = null;

    public Connection getConnection() {

        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/Ambullanta?useSSL=false", "root", "3134");
            return con;
        } catch (SQLException ex) {
            Logger.getLogger(RregjistrimiPacientit.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Not Connected To Database!");
            return null;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btn_insert = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        txt_emri = new javax.swing.JTextField();
        txt_mbiemri = new javax.swing.JTextField();
        txt_mosha = new javax.swing.JTextField();
        txt_emriPrindit = new javax.swing.JTextField();
        dataLindjes = new com.toedter.calendar.JDateChooser();
        btn_clear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1_Pacienti = new javax.swing.JTable();
        btn_update = new javax.swing.JButton();
        btn_first = new javax.swing.JButton();
        btn_next = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("ID:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Emri:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Mbiemri:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Mosha:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Emri Prindit:");

        btn_insert.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_insert.setText("Insert");
        btn_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertActionPerformed(evt);
            }
        });

        btn_delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Data Lindjes:");

        txt_emriPrindit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_emriPrinditActionPerformed(evt);
            }
        });

        btn_clear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        jTable1_Pacienti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Emri", "Mbiemri", "Mosha", "EmriPrindit", "DataLindjes"
            }
        ));
        jScrollPane1.setViewportView(jTable1_Pacienti);

        btn_update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_first.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_first.setText("First");
        btn_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_firstActionPerformed(evt);
            }
        });

        btn_next.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_next.setText("Next");
        btn_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_emri, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_mbiemri, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_mosha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_emriPrindit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataLindjes, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btn_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_first, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btn_update)
                                .addGap(18, 18, 18)
                                .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_emri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_mbiemri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_mosha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_emriPrindit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(dataLindjes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_insert)
                            .addComponent(btn_first, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_next))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_clear)
                            .addComponent(btn_update)
                            .addComponent(btn_delete))))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_emriPrinditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_emriPrinditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_emriPrinditActionPerformed

    private void btn_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertActionPerformed
        if (checkInputs()) {

            try {

                Connection con = getConnection();
                PreparedStatement ps = con.prepareStatement("INSERT INTO ambullantalogin.rregjistrimipacientit"
                        + "(id,emri,mbiemri,mosha,emriPrindit,dataLindjes)"
                        + "values(?,?,?,?,?,?)  ");

                ps.setString(1, txt_id.getText());
                ps.setString(2, txt_emri.getText());
                ps.setString(3, txt_mbiemri.getText());
                ps.setString(4, txt_mosha.getText());
                ps.setString(5, txt_emriPrindit.getText());

                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String addDate = dateFormat.format(dataLindjes.getDate());
                ps.setString(6, addDate);

                ps.executeUpdate();
                Show_Pacient_In_Table();
                //tregon per insertimin e pacientit
                JOptionPane.showMessageDialog(null, "Pacient Inserted");

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else {
            JOptionPane.showMessageDialog(null, "One or More Fields Are Empty");
        }
    }//GEN-LAST:event_btn_insertActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        if (!txt_id.getText().equals("")) {
            Connection con = getConnection();
            try {
                PreparedStatement ps = con.prepareStatement("DELETE FROM ambullantalogin.rregjistrimipacientit"
                        + " WHERE id = ?");
                int id = Integer.parseInt(txt_id.getText());
                ps.setInt(1, id);
                ps.executeUpdate();
                Show_Pacient_In_Table();
                //Pacienti i fshi
                JOptionPane.showMessageDialog(null, "Pacient Deleted");

            } catch (SQLException ex) {
                Logger.getLogger(RregjistrimiPacientit.class.getName()).log(Level.SEVERE, null, ex);

                JOptionPane.showMessageDialog(null, "Patient Not Deleted!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Patient Not Deleted : No Id To Delete!");
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        // TODO add your handling code here:
        txt_id.setText("");
        txt_emri.setText("");
        txt_mbiemri.setText("");
        txt_mosha.setText("");
        txt_emriPrindit.setText("");
        dataLindjes.setDate(null);
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:
        if (checkInputs() && txt_id.getText() != null) {

            String UpdateQuery;
            PreparedStatement ps;
            Connection con = getConnection();
            try {
                UpdateQuery = "UPDATE ambullantalogin.rregjistrimipacientit SET emri = ?, mbiemri = ?"
                        + ",mosha = ?, emriPrindit = ?,dataLindjes = ? WHERE id = ?";

                ps = con.prepareStatement(UpdateQuery);

                ps.setString(1, txt_emri.getText());
                ps.setString(2, txt_mbiemri.getText());
                ps.setInt(3, Integer.parseInt(txt_mosha.getText()));
                ps.setString(4, txt_emriPrindit.getText());

                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String addDate = dateFormat.format(dataLindjes.getDate());
                ps.setString(5, addDate);

                ps.setInt(6, Integer.parseInt(txt_id.getText()));

                ps.executeUpdate();
                Show_Pacient_In_Table();

            } catch (SQLException ex) {
                Logger.getLogger(RregjistrimiPacientit.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btn_updateActionPerformed

    //pozita
    int pozita = 0;

    private void btn_firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_firstActionPerformed
        // TODO add your handling code here:
        pozita = 0;
        ShowItem(pozita);
    }//GEN-LAST:event_btn_firstActionPerformed

    private void btn_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nextActionPerformed
        // TODO add your handling code here:
        pozita++;

        if (pozita >= getPacientList().size()) {
            pozita = getPacientList().size() - 1;
        }
        ShowItem(pozita);
    }//GEN-LAST:event_btn_nextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_first;
    private javax.swing.JButton btn_insert;
    private javax.swing.JButton btn_next;
    private javax.swing.JButton btn_update;
    private com.toedter.calendar.JDateChooser dataLindjes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1_Pacienti;
    private javax.swing.JTextField txt_emri;
    private javax.swing.JTextField txt_emriPrindit;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_mbiemri;
    private javax.swing.JTextField txt_mosha;
    // End of variables declaration//GEN-END:variables

    private boolean checkInputs() {
        if (txt_emri.getText() == null || txt_mbiemri.getText() == null
                || txt_mosha.getText() == null || txt_emriPrindit.getText() == null
                || dataLindjes.getDate() == null) {
            return false;
        } else {
            try {
                Integer.parseInt(txt_id.getText());
                return true;
            } catch (NumberFormatException e) {
                return false;
            }
        }
    }

    //Table
    public ArrayList<Pacienti> getPacientList() {

        ArrayList<Pacienti> pacientList = new ArrayList<Pacienti>();
        Connection con = getConnection();
        String query = "SELECT * FROM ambullantalogin.rregjistrimipacientit ";

        Statement st;
        ResultSet rs;

        try {

            st = con.createStatement();
            rs = st.executeQuery(query);
            Pacienti pacienti;

            while (rs.next()) {
                pacienti = new Pacienti(rs.getInt("id"), rs.getString("emri"),
                        rs.getString("mbiemri"), rs.getInt("mosha"),
                        rs.getString("emriPrindit"), rs.getDate("dataLindjes"));

                pacientList.add(pacienti);
            }

        } catch (SQLException ex) {
            Logger.getLogger(RregjistrimiPacientit.class.getName()).log(Level.SEVERE, null, ex);
        }
        return pacientList;
    }
    // 2 - Populate the JTable

    public void Show_Pacient_In_Table() {

        ArrayList<Pacienti> list = getPacientList();
        DefaultTableModel model = (DefaultTableModel) jTable1_Pacienti.getModel();

        //clear jtable content
        model.setRowCount(0);
        Object[] row = new Object[8];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getId();
            row[1] = list.get(i).getEmri();
            row[2] = list.get(i).getMbiemri();
            row[3] = list.get(i).getMosha();
            row[4] = list.get(i).getEmriPrindit();
            row[5] = list.get(i).getDataLindjes();

            model.addRow(row);

        }

    }

    //showItem
    public void ShowItem(int index) {

        txt_id.setText(Integer.toString(getPacientList().get(index).getId()));
        txt_emri.setText(getPacientList().get(index).getEmri());
        txt_mbiemri.setText(getPacientList().get(index).getMbiemri());
        txt_mosha.setText(Integer.toString(getPacientList().get(index).getMosha()));
        txt_emriPrindit.setText(getPacientList().get(index).getEmriPrindit());
        dataLindjes.setDate(getPacientList().get(index).getDataLindjes());

    }
}
